package com.zhihao.sell.dataobject;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.zhihao.sell.enums.ProductStatusEnum;
import com.zhihao.sell.utils.EnumUtil;
import com.zhihao.sell.enums.ProductStatusEnum;
import com.zhihao.sell.utils.EnumUtil;
import java.io.Serializable;
import lombok.Data;

import javax.persistence.Entity;
import javax.persistence.Id;
import java.math.BigDecimal;
import java.util.Date;
import org.hibernate.annotations.DynamicUpdate;

/**
 * Class ProductInfo, contains all the rows of the ProductInfo table in database.
 */
// Map from product_info to an object
@Entity
// Lombok
@Data
// update time
@DynamicUpdate
public class ProductInfo implements Serializable {

  // ID generated by plugin, which confirms it unique when serializing.
  private static final long serialVersionUID = 9177158347614112225L;
  @Id
  private String productId;

  /**
   * name.
   */
  private String productName;

  /**
   * price. Use BigDecimal for precise representation of product price in decimal number.
   */
  private BigDecimal productPrice;

  /**
   * stock.
   */
  private Integer productStock;

  /**
   * description.
   */
  private String productDescription;

  /**
   * image.
   */
  private String productIcon;

  /**
   * status
   */
  private Integer productStatus = ProductStatusEnum.UP.getCode();

  /**
   * category type.
   */
  private Integer categoryType;

  /**
   * create Time.
   */
  private Date createTime;

  /**
   * updateTime.
   */
  private Date updateTime;

  /**
   * Get the status of the product.
   *
   * @return the status of the product
   */
  @JsonIgnore // don't show the method if the object is returned as json
  public ProductStatusEnum getProductStatusEnum() {
    return EnumUtil.getByCode(productStatus, ProductStatusEnum.class);
  }
}
